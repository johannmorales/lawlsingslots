/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WidgetsBonusesImport } from './routes/widgets/bonuses'
import { Route as StreamSlotsImport } from './routes/stream/slots'
import { Route as StreamSlots1Import } from './routes/stream/slots.1'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WidgetsBonusesRoute = WidgetsBonusesImport.update({
  path: '/widgets/bonuses',
  getParentRoute: () => rootRoute,
} as any)

const StreamSlotsRoute = StreamSlotsImport.update({
  path: '/stream/slots',
  getParentRoute: () => rootRoute,
} as any)

const StreamSlots1Route = StreamSlots1Import.update({
  path: '/1',
  getParentRoute: () => StreamSlotsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/stream/slots': {
      id: '/stream/slots'
      path: '/stream/slots'
      fullPath: '/stream/slots'
      preLoaderRoute: typeof StreamSlotsImport
      parentRoute: typeof rootRoute
    }
    '/widgets/bonuses': {
      id: '/widgets/bonuses'
      path: '/widgets/bonuses'
      fullPath: '/widgets/bonuses'
      preLoaderRoute: typeof WidgetsBonusesImport
      parentRoute: typeof rootRoute
    }
    '/stream/slots/1': {
      id: '/stream/slots/1'
      path: '/1'
      fullPath: '/stream/slots/1'
      preLoaderRoute: typeof StreamSlots1Import
      parentRoute: typeof StreamSlotsImport
    }
  }
}

// Create and export the route tree

interface StreamSlotsRouteChildren {
  StreamSlots1Route: typeof StreamSlots1Route
}

const StreamSlotsRouteChildren: StreamSlotsRouteChildren = {
  StreamSlots1Route: StreamSlots1Route,
}

const StreamSlotsRouteWithChildren = StreamSlotsRoute._addFileChildren(
  StreamSlotsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/stream/slots': typeof StreamSlotsRouteWithChildren
  '/widgets/bonuses': typeof WidgetsBonusesRoute
  '/stream/slots/1': typeof StreamSlots1Route
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/stream/slots': typeof StreamSlotsRouteWithChildren
  '/widgets/bonuses': typeof WidgetsBonusesRoute
  '/stream/slots/1': typeof StreamSlots1Route
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/stream/slots': typeof StreamSlotsRouteWithChildren
  '/widgets/bonuses': typeof WidgetsBonusesRoute
  '/stream/slots/1': typeof StreamSlots1Route
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/stream/slots' | '/widgets/bonuses' | '/stream/slots/1'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/stream/slots' | '/widgets/bonuses' | '/stream/slots/1'
  id:
    | '__root__'
    | '/'
    | '/stream/slots'
    | '/widgets/bonuses'
    | '/stream/slots/1'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  StreamSlotsRoute: typeof StreamSlotsRouteWithChildren
  WidgetsBonusesRoute: typeof WidgetsBonusesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  StreamSlotsRoute: StreamSlotsRouteWithChildren,
  WidgetsBonusesRoute: WidgetsBonusesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/stream/slots",
        "/widgets/bonuses"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/stream/slots": {
      "filePath": "stream/slots.tsx",
      "children": [
        "/stream/slots/1"
      ]
    },
    "/widgets/bonuses": {
      "filePath": "widgets/bonuses.tsx"
    },
    "/stream/slots/1": {
      "filePath": "stream/slots.1.tsx",
      "parent": "/stream/slots"
    }
  }
}
ROUTE_MANIFEST_END */
